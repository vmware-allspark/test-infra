apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: "cosign-key"
  namespace: "test-pods"
spec:
  backendType: gcpSecretsManager
  projectId: "istio-prow-build"
  dataFrom:
  - "gke_istio-prow-build_us-west1-a_prow-private__test-pods__cosign-key" # Secret name in GSM
---
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: "gitconfig"
  namespace: "test-pods"
spec:
  backendType: gcpSecretsManager
  projectId: "istio-prow-build"
  dataFrom:
  - "gke_istio-prow-build_us-west1-a_prow-private__test-pods__gitconfig" # Secret name in GSM
---
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: "netrc-secret"
  namespace: "test-pods"
spec:
  backendType: gcpSecretsManager
  projectId: "istio-prow-build"
  dataFrom:
  - "gke_istio-prow-build_us-west1-a_prow-private__test-pods__netrc-secret" # Secret name in GSM
---
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: "ssh-key-secret"
  namespace: "test-pods"
spec:
  backendType: gcpSecretsManager
  projectId: "istio-prow-build"
  dataFrom:
  - "gke_istio-prow-build_us-west1-a_prow-private__test-pods__ssh-key-secret" # Secret name in GSM
---

# The private cluster release process currently "depends" on the following Secrets
# These are accidental dependencies - the code logically doesn't need them.
# Rather than give real secrets, we insert fake data.
# This is a huge hack and only a stop-gap to properly cleaning it up.
# NOTE: Not present here is 'rel-pipeline-service-account'; this actually does need the real token until WI is used
apiVersion: v1
data:
  token: fake
kind: Secret
metadata:
  name: grafana-token
  namespace: test-pods
type: Opaque
---
apiVersion: v1
data:
  config.json: e30K
kind: Secret
metadata:
  name: rel-pipeline-docker-config
  namespace: test-pods
type: Opaque
---
apiVersion: v1
data:
  rel-pipeline-github: fake
kind: Secret
metadata:
  name: rel-pipeline-github
  namespace: test-pods
type: Opaque
