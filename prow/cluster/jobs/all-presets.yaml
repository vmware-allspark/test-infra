presets:
- labels:
    preset-prow-deployer-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /creds/service-account.json
  volumeMounts:
  - name: creds
    mountPath: /creds
    readOnly: true
  volumes:
  - name: creds
    secret:
      secretName: prow-deployer-service-account
- labels:
    preset-prow-pusher-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /creds/service-account.json
  volumeMounts:
  - name: creds
    mountPath: /creds
    readOnly: true
  volumes:
  - name: creds
    secret:
      secretName: prow-pusher-service-account
- labels:
    preset-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
    value: /etc/service-account/service-account.json
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
  volumes:
  - name: service
    secret:
      secretName: service-account
- labels:
    preset-bazel: "true"
  volumeMounts:
  - name: cache-ssd
    mountPath: /home/bootstrap/.cache
  volumes:
  - name: cache-ssd
    hostPath:
      path: /mnt/disks/ssd0/proxy
- labels:
    preset-release-pipeline: "true"
  env:
  - name: DOCKER_CONFIG
    value: /etc/rel-pipeline-docker-config
  - name: GITHUB_TOKEN_FILE
    value: /etc/github/rel-pipeline-github
  - name: GRAFANA_TOKEN_FILE
    value: /etc/grafana/token
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/rel-pipeline-service-account.json
  volumeMounts:
  - name: rel-pipeline-docker-config
    mountPath: /etc/rel-pipeline-docker-config
  - name: rel-pipeline-github
    mountPath: /etc/github
    readOnly: true
  - name: rel-pipeline-grafana
    mountPath: /etc/grafana
    readOnly: true
  - name: rel-pipeline-service-account
    mountPath: /etc/service-account
    readOnly: true
  volumes:
  - name: rel-pipeline-service-account
    secret:
      secretName: rel-pipeline-service-account
  - name: rel-pipeline-github
    secret:
      secretName: rel-pipeline-github
  - name: rel-pipeline-grafana
    secret:
      secretName: grafana-token
  - name: rel-pipeline-docker-config
    secret:
      secretName: rel-pipeline-docker-config
- labels:
    preset-release-build-test: "true"
  env:
  - name: DOCKER_CONFIG
    value: /etc/rel-pipeline-docker-config
  - name: GITHUB_TOKEN_FILE
    value: /etc/github/rel-pipeline-github
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
    value: /etc/service-account/service-account.json
  volumeMounts:
  - name: rel-pipeline-docker-config
    mountPath: /etc/rel-pipeline-docker-config
    readOnly: true
  - name: rel-pipeline-github
    mountPath: /etc/github
    readOnly: true
  - name: service
    mountPath: /etc/service-account
    readOnly: true
  volumes:
  - name: service
    secret:
      secretName: service-account
  - name: rel-pipeline-docker-config
    secret:
      secretName: rel-pipeline-docker-config
  - name: rel-pipeline-github
    secret:
      secretName: rel-pipeline-github
- labels:
    preset-enable-ssh: "true"
  env:
  - name: GIT_SSH_COMMAND
    value: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
  volumeMounts:
  - mountPath: /root/.ssh
    name: ssh
    readOnly: true
  volumes:
  - name: ssh
    secret:
      secretName: ssh-key-secret
      items:
      - key: secret
        path: id_rsa
        mode: 0600
- labels:
    preset-enable-gomod-netrc: "true"
  volumeMounts:
  - mountPath: /home/.netrc
    subPath: .netrc
    name: netrc
    readOnly: true
  volumes:
  - name: netrc
    secret:
      secretName: netrc-secret
      items:
      - key: secret
        path: .netrc
        mode: 0600
- labels:
    preset-enable-prowbazel-netrc: "true"
  volumeMounts:
  - mountPath: /home/bootstrap/.netrc
    subPath: .netrc
    name: netrc
    readOnly: true
  volumes:
  - name: netrc
    secret:
      secretName: netrc-secret
      items:
      - key: secret
        path: .netrc
        mode: 0600
- labels:
    preset-enable-netrc: "true"
  volumeMounts:
  - mountPath: /home/.netrc
    subPath: .netrc
    name: netrc
    readOnly: true
  volumes:
  - name: netrc
    secret:
      secretName: netrc-secret
      items:
      - key: secret
        path: .netrc
        mode: 0600
- labels:
    preset-override-envoy: "true"
  env:
  - name: ISTIO_ENVOY_BASE_URL
    value: https://storage.googleapis.com/istio-private-build/proxy
  - name: AUTH_HEADER
    valueFrom:
      secretKeyRef:
        name: authentikos-token
        key: token
- labels:
    preset-override-deps: "release-1.4-release"
  env:
  - name: DEPENDENCIES
    valueFrom:
      configMapKeyRef:
        name: release-1.4-release-deps
        key: dependencies
- labels:
    preset-override-deps: "release-1.4-istio"
  env:
  - name: DEPENDENCIES
    valueFrom:
      configMapKeyRef:
        name: release-1.4-istio-deps
        key: dependencies
- labels:
    preset-override-deps: "release-1.5-release"
  env:
  - name: DEPENDENCIES
    valueFrom:
      configMapKeyRef:
        name: release-1.5-release-deps
        key: dependencies
- labels:
    preset-override-deps: "release-1.5-istio"
  env:
  - name: DEPENDENCIES
    valueFrom:
      configMapKeyRef:
        name: release-1.5-istio-deps
        key: dependencies
- labels:
    preset-goproxy: "true"
  env:
  - name: GOPROXY
    value: "https://proxy.golang.org"
- env:
  - name: BUILD_WITH_CONTAINER
    value: "0"